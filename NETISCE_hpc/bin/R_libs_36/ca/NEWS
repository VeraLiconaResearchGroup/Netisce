Version 0.71 (2018-10-10)
o S3 method issue with plot3d.ca fixed

Version 0.70 (2016-12-11)
o Fixed a number of issues with supplementary points/subset analyses

Version 0.65 (2016-05-15)
o Fixed issue wirth subset MCA (computing row coordinates gave an error 'Error in (Z/Q) %*% col.sc [...]')
o Added row-and columnnames for returned matrices (indicator, Burt, 'subinertia') in MCA
o Fixed a (rare) issue with JCA and a subset not containing columns from all original factors

Version 0.64 (2016-01-17)
o mjca() with 'supcol!=NA': 
  - Fixed Mass, ChiDist and Inertia values in print method.
  - Fixed contributions in summary method.  
o mjca() with 'subsetcol!=NA' and 'lambda=JCA': 
  - Fixed warnings message ('In rep(1:Q.sub ...)')
o Fixed row output for 'lambda!="indicator"' in mjca 
  (rows were previously referring to the Burt matrix, now rows are from the original data)
o Added cacoord() for extracting CA/MCA coordinates 
  (standard/principal coordinates, and row-/column configurations for plotting)
o Added caconv() for converting between CA/MCA data types 
  (frequency tables, indicator/response pattern/Burt matrices)
o mjca() has been made an S3 generic, with data.frame, table, and array methods
o added .arrows() to draw nicer arrows with arrows=TRUE in plot.ca() and plot.mjca()
o plot.ca() gains a lwd= argument for arrows and lines
o Updated mjca.Rd with details of lambda= argument
o Added multilines() for nicer mjca plots
o plot.mcja gains a collabels= argument determining the form of column labels

Version 0.61 (2015-05-18)
o Fixed problem with nd='fixed value' in ca

Version 0.60 (2015-03-01)
o Temporarily enabled plotting rows in plot.mjca 
o Use requireNamespace("rgl") in plot3d.ca.r to avoid NOTE in R CMD check

Version 0.59 (2015-01-29)

Version 0.58 (2014-12-31)
o mjca(): Added option 'reti' (logical, if TRUE returns the indicator matrix as $indmat). 
o mjca(): Fixed potentially negative eigenvalues (numerical issue; negative ev's are set to zero).
o mjca(): Burt matrices ($Burt) now with row- and columnnames.
o print.summary.ca(): Fixed scree plot.

Version 0.57 (2014-12-30)
o Fixed bug in print.summary.mcja re columns
o In plot.ca() and plot.mjca(), for labels=(1,1), don't offset the labels from the points


Version 0.56 (2014-11-04)
o Begin to assign dimnames to matrices from ca() and mjca()--- for now, just the coordinates matrices
o mjca() now returns an additional component, factors, containing factor names and levels, to facilitate plotting
  and manipulation. This can be used to customize the color, symbols, and labels in plots.
o summary.ca() gains rows= and columns= arguments that can be used like scree= to suppress parts of the output.
o summary.mjca() gains a similar columns= argument
o Fixed calls to rgl functions in plot3d.ca.r to avoid 'no global binding' warnings.
o Fixed bug in plot.mcja() with dimension percentages for lambda="adjusted"

Version 0.55 (2014-03-09)
o plot.ca() and plot.mjca() now provide sensible default xlab and ylab
o mjca() now accepts a table object as input, using internal expand.dft
o ca() has been made generic, accepting input in the form of matrices, data frames 
  (coerced to frequency tables), objects of class "xtabs" or "table" and one-sided
  formulae of the form ~ F1 + F2, where F1 and F2 are factors.

Version 0.54 (2014-01-05)
o Added xlab=, ylab= and lines= arguments to plot.ca().  The function now returns an
  invisible result containing the row and column coordinates calculated internally for
  the plot, for use in additional plot annotation.
o Added xlab=, ylab= arguments to plot.mjca().  The function now returns an
  invisible result containing the row and column coordinates calculated internally for
  the plot, for use in additional plot annotation.
o For plot.ca(), the defaults for xlab= and ylab= were changed from "" to "_auto_",
  meaning that the axis labels are auto-generated to be of the form "Dimension X (xx.xx%)"
  in conformance with other dimension reduction plots.
o Added col.lab argument to plot.ca(), to provide colors for the point labels, similar to
  col for points.
